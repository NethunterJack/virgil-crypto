--- library/oid.c	2014-07-11 12:28:56.000000000 +0300
+++ library/oid.c	2015-02-09 20:45:29.000000000 +0200
@@ -497,6 +497,18 @@
         POLARSSL_CIPHER_DES_EDE3_CBC,
     },
     {
+        { ADD_LEN( OID_AES_128_CBC ),         "aes128-CBC", "AES-128-CBC" },
+        POLARSSL_CIPHER_AES_128_CBC,
+    },
+    {
+        { ADD_LEN( OID_AES_192_CBC ),         "aes192-CBC", "AES-192-CBC" },
+        POLARSSL_CIPHER_AES_192_CBC,
+    },
+    {
+        { ADD_LEN( OID_AES_256_CBC ),         "aes256-CBC", "AES-256-CBC" },
+        POLARSSL_CIPHER_AES_256_CBC,
+    },
+    {
         { NULL, 0, NULL, NULL },
         0,
     },
@@ -504,6 +516,7 @@

 FN_OID_TYPED_FROM_ASN1(oid_cipher_alg_t, cipher_alg, oid_cipher_alg);
 FN_OID_GET_ATTR1(oid_get_cipher_alg, oid_cipher_alg_t, cipher_alg, cipher_type_t, cipher_alg);
+FN_OID_GET_OID_BY_ATTR1(oid_get_oid_by_cipher_alg, oid_cipher_alg_t, oid_cipher_alg, cipher_type_t, cipher_alg);
 #endif /* POLARSSL_CIPHER_C */

 #if defined(POLARSSL_MD_C)
@@ -588,8 +601,39 @@

 FN_OID_TYPED_FROM_ASN1(oid_pkcs12_pbe_alg_t, pkcs12_pbe_alg, oid_pkcs12_pbe_alg);
 FN_OID_GET_ATTR2(oid_get_pkcs12_pbe_alg, oid_pkcs12_pbe_alg_t, pkcs12_pbe_alg, md_type_t, md_alg, cipher_type_t, cipher_alg);
+FN_OID_GET_OID_BY_ATTR2(oid_get_oid_by_pkcs12_pbe_alg, oid_pkcs12_pbe_alg_t, oid_pkcs12_pbe_alg, cipher_type_t, cipher_alg, md_type_t, md_alg);
 #endif /* POLARSSL_PKCS12_C */

+#if defined(POLARSSL_KDF_C)
+/*
+ * For digestAlgorithm
+ */
+typedef struct {
+    oid_descriptor_t    descriptor;
+    kdf_type_t           kdf_alg;
+} oid_kdf_alg_t;
+
+static const oid_kdf_alg_t oid_kdf_alg[] =
+{
+    {
+        { ADD_LEN( OID_ISO_KDF1 ),       "id-kdf-kdf1",       "KDF1" },
+        POLARSSL_KDF_KDF1,
+    },
+    {
+        { ADD_LEN( OID_ISO_KDF2 ),       "id-kdf-kdf2",       "KDF2" },
+        POLARSSL_KDF_KDF2,
+    },
+    {
+        { NULL, 0, NULL, NULL },
+        0,
+    },
+};
+
+FN_OID_TYPED_FROM_ASN1(oid_kdf_alg_t, kdf_alg, oid_kdf_alg);
+FN_OID_GET_ATTR1(oid_get_kdf_alg, oid_kdf_alg_t, kdf_alg, kdf_type_t, kdf_alg);
+FN_OID_GET_OID_BY_ATTR1(oid_get_oid_by_kdf_alg, oid_kdf_alg_t, oid_kdf_alg, kdf_type_t, kdf_alg);
+#endif /* POLARSSL_KDF_C */
+
 #if defined(_MSC_VER) && !defined snprintf && !defined(EFIX64) && \
     !defined(EFI32)
 #include <stdarg.h>
