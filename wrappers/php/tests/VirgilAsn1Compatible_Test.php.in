<?php
/**
 * Copyright (C) 2014 Virgil Security Inc.
 *
 * Lead Maintainer: Virgil Security Inc. <support@virgilsecurity.com>
 *
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *     (1) Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *
 *     (2) Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in
 *     the documentation and/or other materials provided with the
 *     distribution.
 *
 *     (3) Neither the name of the copyright holder nor the names of its
 *     contributors may be used to endorse or promote products derived from
 *     this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

include_once "@PHP_MODULE_FILE_NAME@";

/**
 * @coversDefaultClass VirgilAsn1Compatible
 */
class VirgilAsn1Compatible_Test extends PHPUnit_Framework_TestCase {

    /**
     * @covers VirgilAsn1Compatible::fromAsn1
     * @covers VirgilAsn1Compatible::toAsn1
     */
    public function test_account_asn1_marshalling_demarshalling() {
        $this->check_object_asn1_marshalling_demarshalling(
            new VirgilAccount(),
            file_get_contents("data/asn1_account.der")
        );
    }

    /**
     * @covers VirgilAsn1Compatible::fromAsn1
     * @covers VirgilAsn1Compatible::toAsn1
     */
    public function test_certificate_asn1_marshalling_demarshalling() {
        $this->check_object_asn1_marshalling_demarshalling(
            new VirgilCertificate(),
            file_get_contents("data/asn1_certificate.der")
        );
    }

    /**
     * @covers VirgilAsn1Compatible::fromAsn1
     * @covers VirgilAsn1Compatible::toAsn1
     */
    public function test_data_sign_asn1_marshalling_demarshalling() {
        $this->check_object_asn1_marshalling_demarshalling(
            new VirgilSign(),
            file_get_contents("data/asn1_data_sign.der")
        );
    }

    /**
     * @covers VirgilAsn1Compatible::fromAsn1
     * @covers VirgilAsn1Compatible::toAsn1
     */
    public function test_ticket_sign_asn1_marshalling_demarshalling() {
        $this->check_object_asn1_marshalling_demarshalling(
            new VirgilSign(),
            file_get_contents("data/asn1_ticket_sign.der")
        );
    }

    /**
     * @covers VirgilAsn1Compatible::fromAsn1
     * @covers VirgilAsn1Compatible::toAsn1
     */
    public function test_unique_ticket_email_asn1_marshalling_demarshalling() {
        $this->check_object_asn1_marshalling_demarshalling(
            new VirgilUniqueTicket(),
            file_get_contents("data/asn1_unique_ticket_email.der")
        );
    }

    /**
     * @covers VirgilAsn1Compatible::fromAsn1
     * @covers VirgilAsn1Compatible::toAsn1
     */
    public function test_unique_ticket_phone_asn1_marshalling_demarshalling() {
        $this->check_object_asn1_marshalling_demarshalling(
            new VirgilUniqueTicket(),
            file_get_contents("data/asn1_unique_ticket_phone.der")
        );
    }

    /**
     * @covers VirgilAsn1Compatible::fromAsn1
     * @covers VirgilAsn1Compatible::toAsn1
     */
    public function test_unique_ticket_fax_asn1_marshalling_demarshalling() {
        $this->check_object_asn1_marshalling_demarshalling(
            new VirgilUniqueTicket(),
            file_get_contents("data/asn1_unique_ticket_fax.der")
        );
    }

    /**
     * @covers VirgilAsn1Compatible::fromAsn1
     * @covers VirgilAsn1Compatible::toAsn1
     */
    public function test_info_ticket_first_name_asn1_marshalling_demarshalling() {
        $this->check_object_asn1_marshalling_demarshalling(
            new VirgilInfoTicket(),
            file_get_contents("data/asn1_info_ticket_first_name.der")
        );
    }

    private function check_object_asn1_marshalling_demarshalling($obj, $asn1Base) {
        $obj->fromAsn1($asn1Base);
        $asn1 = $obj->toAsn1();
        $this->assertEquals($asn1Base, $asn1);
    }
}

?>
